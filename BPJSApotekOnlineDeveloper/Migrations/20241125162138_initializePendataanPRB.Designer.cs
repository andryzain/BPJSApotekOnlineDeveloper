// <auto-generated />
using System;
using BPJSApotekOnlineDeveloper.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPJSApotekOnlineDeveloper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241125162138_initializePendataanPRB")]
    partial class initializePendataanPRB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BPJSApotekOnlineDeveloper.Areas.MasterData.Models.Pendaftaran", b =>
                {
                    b.Property<Guid>("PendaftaranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatTinggal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformasiObat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaApotek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKeluarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaLengkapPeserta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentitasKTPSIM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKartuBpjs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusKepesertaanBpjs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusVerifikasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalPendaftaranBpjs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipeKepesertaanBpjs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PendaftaranId");

                    b.ToTable("MasterPendaftaran", "dbo");
                });

            modelBuilder.Entity("BPJSApotekOnlineDeveloper.Areas.MasterData.Models.PendataanPRBMTM", b =>
                {
                    b.Property<Guid>("PendataanPrbMtmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BeratBadan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Diagnosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diastole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dpjp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efektivitas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FktpTerdaftar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FktrlPerujukBalik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indikasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoHandphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKa_Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKunjunganPcare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiwayatAlergiObat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiwayatEso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiwayatMerokok")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiwayatPenggunaanObatTambahan_Alternatif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sistole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglInput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("VitalSign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PendataanPrbMtmId");

                    b.ToTable("MasterPendataanPRBMTM", "dbo");
                });

            modelBuilder.Entity("BPJSApotekOnlineDeveloper.Areas.MasterData.Models.PendataanResepMasuk", b =>
                {
                    b.Property<Guid>("PendataanResepMasukId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadanUsaha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Diagnosa_awal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaskesAsalResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Iterasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JnsKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JnsPst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JnsResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NmPeserta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKartu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoSEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pisat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglPelayanan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglPulang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglSEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TkPlyn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PendataanResepMasukId");

                    b.ToTable("MasterPendataanResepMasuk", "dbo");
                });

            modelBuilder.Entity("BPJSApotekOnlineDeveloper.Areas.MasterData.Models.ResepMasuk", b =>
                {
                    b.Property<Guid>("ResepMasukId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadanUsaha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Diagnosa_awal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaskesAsalResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JnsKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JnsPst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JnsResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NmPeserta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKartu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoSEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pisat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglEntry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglPelayanan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglPulang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglResep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TglSEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TkPlyn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ResepMasukId");

                    b.ToTable("MasterResepMasuk", "dbo");
                });

            modelBuilder.Entity("BPJSApotekOnlineDeveloper.Areas.MasterData.Models.UserActive", b =>
                {
                    b.Property<Guid>("UserActiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Handphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserActiveCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserActiveId");

                    b.ToTable("MasterUserActive", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PurchasingSystemDeveloper.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("KodeUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PurchasingSystemDeveloper.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PurchasingSystemDeveloper.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurchasingSystemDeveloper.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PurchasingSystemDeveloper.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
